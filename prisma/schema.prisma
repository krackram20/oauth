datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                       String  @id @default(auto()) @map("_id") @db.ObjectId
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?
    access_token             String?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?
    session_state            String?
    refresh_token_expires_in Int?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id               String    @id @default(auto()) @map("_id") @db.ObjectId
    name             String?
    email            String?   @unique
    emailVerified    DateTime?
    password         String?
    image            String?
    accounts         Account[]
    sessions         Session[]
    datasets         Json[]
    statistics       Json[]
    charts           Json[]
    stripeCustomerId String?
    isActive         Boolean   @default(false)
}

model VerificationToken {
    identifier String   @id @default(auto()) @map("_id") @db.ObjectId
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Datasets {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    concat     String   @unique
    owner      String
    name       String
    columns    Json?
    rows       Json?
    statistics Json?
    charts     Json[]
    visitors   String[]
}
